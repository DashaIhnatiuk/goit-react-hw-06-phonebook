{"version":3,"sources":["components/OutputSection/OutputSection.module.css","components/AddSection/AddSection.module.css","components/Animations/pop.module.css","components/Animations/alert.module.css","components/Notification/Notification.module.css","components/Animations/slide.module.css","components/Animations/title.module.css","redux/phoneBook/actions.js","redux/phoneBook/reducer.js","redux/store.js","components/Notification/index.jsx","components/AddSection/index.jsx","components/OutputSection/index.jsx","components/Filter/index.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","phoneBookReducer","devTools","process","persistor","persistStore","Notification","message","className","s","errorMassage","AddSection","error","errorMessage","handleInput","e","target","value","setState","handleSubmit","preventDefault","props","some","contact","setTimeout","resetData","onAddContact","this","container","type","placeholder","onChange","addBtn","onClick","CSSTransition","in","timeout","classNames","notificationTransition","unmountOnExit","Component","connect","dispatch","phoneBookActions","getFilteredContacts","allContacts","toLowerCase","includes","onDeleteContact","TransitionGroup","component","style","ulSection","map","slideTransition","liItem","deleteBtn","onChangeFilter","event","currentTarget","titleTransition","appear","length","popTransition","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,iCAAiC,UAAY,iCAAiC,OAAS,gC,mBCArHD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,6B,mBCArED,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,KAAO,kBAAkB,WAAa,0B,mBCA1HD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,mBCAhID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,YAAc,kCAAkC,KAAO,2BAA2B,WAAa,mC,mBCAvMD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,mBCAhID,EAAOC,QAAU,CAAC,OAAS,sBAAsB,aAAe,8B,yMCcjD,GAAEC,WAZEC,YAAa,gBAAgB,SAACC,EAAMC,GAAP,MAAmB,CACjEC,QAAS,CACPC,GAAIC,cACJJ,OACAC,cAQyBI,cAJPN,YAAa,mBAISO,aAFvBP,YAAa,0BCR5BQ,EAAQC,YAAc,IAAD,mBACxBC,EAAQX,YAAa,SAACY,EAAD,OAAUR,EAAV,EAAUA,QAAV,4BAA4BQ,GAA5B,CAAmCR,OADhC,cAExBO,EAAQJ,eAAgB,SAACK,EAAD,OAAUR,EAAV,EAAUA,QAAV,OACvBQ,EAAMC,QAAO,qBAAGR,KAAgBD,QAHT,IAMrBS,EAASH,YAAc,GAAD,eACzBC,EAAQH,cAAe,SAACM,EAAD,YAAMV,YAGjBW,cAAgB,CAC7BN,QACAI,WCFIG,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAwB,CAC5BC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,YAAeR,EAAuBS,IAElDpB,aACAqB,UAAUC,IAKG,GAAEP,QAAOQ,UAFNC,YAAaT,I,kGCzBhBU,EATM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,qBAAKC,UAAWC,IAAEC,aAAlB,SACKH,K,QCIHI,E,4MACJlC,MAAQ,CACNV,KAAM,GACNC,OAAQ,GACR4C,OAAO,EACPC,aAAc,I,EAIhBC,YAAc,SAAAC,GAAM,IAAD,EACOA,EAAEC,OAAlBjD,EADS,EACTA,KAAMkD,EADG,EACHA,MACd,EAAKC,SAAL,eACGnD,EAAOkD,K,EAIZE,aAAe,SAAAJ,GACbA,EAAEK,iBADgB,MAEO,EAAK3C,MAAtBV,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACR+B,EAAW,EAAKsB,MAAMtB,SAE5B,OAAIhC,EAWAC,EAWA+B,EAASuB,MAAK,SAAAC,GAAO,OAAIA,EAAQxD,OAASA,MAC5C,EAAKmD,SAAS,CACZN,OAAO,EACPC,aAAc,2BAEhBW,YAAW,WACT,EAAKN,SAAS,CAAEN,OAAO,MACtB,UACH,EAAKa,cAIP,EAAKJ,MAAMK,aAAa3D,EAAMC,QAC9B,EAAKyD,cAvBH,EAAKP,SAAS,CACZN,OAAO,EACPC,aAAc,6BAEhBW,YAAW,WACT,EAAKN,SAAS,CAAEN,OAAO,MACtB,OAjBH,EAAKM,SAAS,CACZN,OAAO,EACPC,aAAc,2BAEhBW,YAAW,WACT,EAAKN,SAAS,CAAEN,OAAO,MACtB,O,+CA8BP,WACEe,KAAKT,SAAS,CAAEnD,KAAM,GAAIC,OAAQ,O,oBAElC,WAAU,IAAD,EACgC2D,KAAKlD,MAApCV,EADD,EACCA,KAAMC,EADP,EACOA,OAAQ6C,EADf,EACeA,aAEtB,OACE,sBAAKL,UAAWC,IAAEmB,UAAlB,UACI,qCACA,uBAAOC,KAAK,OAAOC,YAAY,qBAAqB/D,KAAK,OACvDkD,MAAOlD,EAAMgE,SAAUJ,KAAKb,cAC9B,uCACA,uBAAOe,KAAK,OAAOC,YAAY,qBAAqB/D,KAAK,SACvDkD,MAAOjD,EAAQ+D,SAAUJ,KAAKb,cAChC,wBAAQN,UAAWC,IAAEuB,OAAQC,QAASN,KAAKR,aAA3C,yBAEA,cAACe,EAAA,EAAD,CACFC,GAAIR,KAAKlD,MAAMmC,MACfwB,QAAS,IACTC,WAAYC,IACZC,eAAa,EAJX,SAMF,cAAC,EAAD,CAAchC,QAASM,a,GAhFR2B,aA2GVC,eApBW,SAAAhE,GAAK,MAAK,CAChCsB,SAAUtB,EAAMsB,SAASzB,UAGA,SAAAoE,GAAQ,MAAK,CACtChB,aAAc,SAAC3D,EAAMC,GAAP,OACZ0E,EAASC,EAAiB9E,WAAWE,EAAMC,QAclCyE,CAA6C9B,G,0CCjF5D,IAAMiC,EAAsB,SAACC,EAAanE,GACxC,OAAOmE,EAAYnE,QAAO,SAAC6C,GAAD,OACxBA,EAAQxD,KAAK+E,cAAcC,SAASrE,EAAOoE,mBAuBhCL,eApBS,SAAC,GAAqC,IAAD,IAAlC1C,SAAYzB,EAAsB,EAAtBA,MAAOI,EAAe,EAAfA,OAC5C,MAAO,CACLqB,SAAU6C,EAAoBtE,EAAOI,OAId,SAACgE,GAAD,MAAe,CACxCM,gBAAiB,SAAC9E,GAAD,OAAQwE,EAASC,EAAiBvE,cAAcF,QAapDuE,EAtDf,YAAuD,IAA9B1C,EAA6B,EAA7BA,SAAUiD,EAAmB,EAAnBA,gBACjC,OACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAK1C,UAAW2C,IAAMC,UAAjD,SACGrD,EAASsD,KAAI,YAA2B,IAAxBnF,EAAuB,EAAvBA,GAAIH,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACzB,OACE,cAACkE,EAAA,EAAD,CAEEE,QAAS,IACTC,WAAYiB,IACZf,eAAa,EAJf,SAME,qBAAI/B,UAAW2C,IAAMI,OAArB,UACGxF,EADH,MACYC,EACV,wBACEwC,UAAW2C,IAAMK,UACjBvB,QAAS,WACPe,EAAgB9E,IAHpB,sBAFgCA,IAL7BA,WCAjB,IAceuE,eAdS,SAAAhE,GAAK,MAAK,CAChCwC,MAAOxC,EAAMsB,SAASrB,WAGG,SAAAgE,GAAQ,MAAK,CACtCe,eAAgB,SAAAC,GAAK,OACnBhB,EAASC,EAAiBtE,aAAaqF,EAAMC,cAAc1C,YAQhDwB,EAvBf,YAA4C,IAA1BxB,EAAyB,EAAzBA,MAAOwC,EAAkB,EAAlBA,eACvB,OACE,gCACQ,sDACA,uBAAO5B,KAAK,OAAOC,YAAY,qBAAqB/D,KAAK,SACzDkD,MAAOA,EAAOc,SAAU0B,U,qCCkCpC,IAcehB,gBAdS,SAAChE,GAAD,MAAY,CAClCsB,SAAUtB,EAAMsB,SAASzB,SAaa,KAAzBmE,EA/Cf,YAA4B,IAAb1C,EAAY,EAAZA,SACb,OACE,sBAAKS,UAAU,YAAf,UACE,cAAC0B,EAAA,EAAD,CAAeC,IAAE,EAACC,QAAS,IAAKC,WAAYuB,IAAiBC,QAAM,EAAnE,SACE,oBAAIrD,UAAU,QAAd,yBAEF,cAAC,EAAD,IAEA,cAAC0B,EAAA,EAAD,CACEC,GAAIpC,EAAS+D,OAAS,EACtB1B,QAAS,IACTC,WAAY0B,KACZxB,eAAa,EAJf,SAME,cAAC,EAAD,MAGF,cAACL,EAAA,EAAD,CACEC,GAAIpC,EAAS+D,OAAS,EACtB1B,QAAS,IACTC,WAAY0B,KACZxB,eAAa,EAJf,SAME,gCACE,oBAAI/B,UAAU,QAAd,sBAEA,cAAC,EAAD,eC1BVwD,IAASC,OACT,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUtE,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAauE,QAAS,KAAM/D,UAAWR,EAAMQ,UAA7C,SACE,cAAC,GAAD,YAKRgE,SAASC,eAAe,W","file":"static/js/main.4b56ece1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"OutputSection_deleteBtn__Udf96\",\"ulSection\":\"OutputSection_ulSection__1mCLe\",\"liItem\":\"OutputSection_liItem__2jldm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddSection_container__2SCc4\",\"addBtn\":\"AddSection_addBtn__2-xRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__a0d6n\",\"enterActive\":\"pop_enterActive__2d2_8\",\"exit\":\"pop_exit__3Xi0Z\",\"exitActive\":\"pop_exitActive__2kbsQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__EmDuU\",\"enterActive\":\"alert_enterActive__1bz-1\",\"exit\":\"alert_exit__3LU69\",\"exitActive\":\"alert_exitActive__ZVFJJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMassage\":\"Notification_errorMassage__1CeXt\",\"enter\":\"Notification_enter__lCzmU\",\"enterActive\":\"Notification_enterActive__6NXH6\",\"exit\":\"Notification_exit__3vAKe\",\"exitActive\":\"Notification_exitActive__4VP6-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3L5Tc\",\"enterActive\":\"slide_enterActive__2C4VP\",\"exit\":\"slide_exit__1IZk6\",\"exitActive\":\"slide_exitActive__3lFBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"title_appear__1zwvt\",\"appearActive\":\"title_appearActive__2c5UC\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phoneBookReducer from './phoneBook/reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, phoneBookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\nimport React from \"react\";\r\n\r\nconst Notification = ({ message }) => (\r\n    <div className={s.errorMassage}>\r\n        {message}\r\n    </div>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './AddSection.module.css';\r\nimport notificationTransition from \"../Animations/alert.module.css\";\r\nimport Notification from \"../Notification\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport phoneBookActions from '../../redux/phoneBook/actions';\r\n\r\nclass AddSection extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    error: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n\r\n  handleInput = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contacts = this.props.contacts;\r\n\r\n    if(!name){\r\n      this.setState({\r\n        error: true,\r\n        errorMessage: 'Enter name please',\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ error: false });\r\n      }, 3000);\r\n      return;\r\n    }\r\n\r\n    if(!number){\r\n      this.setState({\r\n        error: true,\r\n        errorMessage: 'Enter number please',\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ error: false });\r\n      }, 3000);\r\n      return;\r\n    }\r\n\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      this.setState({\r\n        error: true,\r\n        errorMessage: 'Contact already exists',\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ error: false });\r\n      }, 3000);\r\n      this.resetData();\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n    this.resetData();\r\n  };\r\n  resetData() {\r\n    this.setState({ name: '', number: '' });\r\n  }\r\n    render() {\r\n      const { name, number, errorMessage } = this.state;\r\n  \r\n      return (\r\n        <div className={s.container}>\r\n            <p>Name</p>\r\n            <input type=\"text\" placeholder=\"Enter contact name\" name=\"name\"\r\n              value={name} onChange={this.handleInput}/>\r\n            <p>Number</p>\r\n            <input type=\"text\" placeholder=\"Enter phone number\" name=\"number\"\r\n              value={number} onChange={this.handleInput}/>\r\n            <button className={s.addBtn} onClick={this.handleSubmit}>Add contact</button>\r\n\r\n            <CSSTransition\r\n          in={this.state.error}\r\n          timeout={250}\r\n          classNames={notificationTransition}\r\n          unmountOnExit\r\n        >\r\n          <Notification message={errorMessage} />\r\n        </CSSTransition>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    contacts: state.contacts.items,\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    onAddContact: (name, number) =>\r\n      dispatch(phoneBookActions.addContact(name, number)),\r\n  });\r\n\r\n  AddSection.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n      }),\r\n    ),\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSection);","import PropTypes from \"prop-types\";\r\nimport style from \"./OutputSection.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport slideTransition from \"../Animations/slide.module.css\";\r\nimport phoneBookActions from \"../../redux/phoneBook/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction OutputSection({ contacts, onDeleteContact }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={style.ulSection}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <CSSTransition\r\n            key={id}\r\n            timeout={250}\r\n            classNames={slideTransition}\r\n            unmountOnExit\r\n          >\r\n            <li className={style.liItem} key={id}>\r\n              {name} : {number}\r\n              <button\r\n                className={style.deleteBtn}\r\n                onClick={() => {\r\n                  onDeleteContact(id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n};\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\r\n  return {\r\n    contacts: getFilteredContacts(items, filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(phoneBookActions.deleteContact(id)),\r\n});\r\nOutputSection.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OutputSection);","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport phoneBookActions from '../../redux/phoneBook/actions';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n            <p>Find contacts by name</p>\r\n            <input type=\"text\" placeholder=\"Enter contact name\" name=\"filter\"\r\n            value={value} onChange={onChangeFilter}/>\r\n</div>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: event =>\r\n    dispatch(phoneBookActions.changeFilter(event.currentTarget.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import AddSection from \"./components/AddSection\";\r\nimport OutputSection from \"./components/OutputSection\";\r\nimport Filter from \"./components/Filter\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport titleTransition from \"./components/Animations/title.module.css\";\r\nimport popTransition from \"./components/Animations/pop.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({ contacts }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <CSSTransition in timeout={500} classNames={titleTransition} appear>\r\n        <h1 className=\"title\">Phonebook</h1>\r\n      </CSSTransition>\r\n      <AddSection />\r\n\r\n      <CSSTransition\r\n        in={contacts.length > 1}\r\n        timeout={250}\r\n        classNames={popTransition}\r\n        unmountOnExit\r\n      >\r\n        <Filter />\r\n      </CSSTransition>\r\n\r\n      <CSSTransition\r\n        in={contacts.length > 0}\r\n        timeout={250}\r\n        classNames={popTransition}\r\n        unmountOnExit\r\n      >\r\n        <div>\r\n          <h2 className=\"title\">Contacts</h2>\r\n\r\n          <OutputSection />\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nApp.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n<React.StrictMode>\n    <Provider store={store.store}>\n      <BrowserRouter>\n        <PersistGate loading={null} persistor={store.persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}